#!/usr/bin/env bash

dotfile_dir="$(dirname $(readlink --canonicalize --no-newline $0))"

backup=true
if [ "$1" = "-f" ] ; then
	backup=false
fi

link_file() {
	local source_file="$1"
	local target_file="$2"
	if [ $backup = true -a -f "$target_file" ] ; then
		mv "$target_file" "${target_file}".old
	fi
	ln -s "$source_file" "$target_file"
}

prompt_user() {
	while true ; do
		read -p "$1 [y/n]:" yn
		case "$yn" in
			[Yy]* ) return 0 ; break ;;
			[Nn]* ) return 1 ; break ;;
			* ) echo "Please answer yes or no." ;;
		esac
	done
}

get_user_data() {
	local input_type="$1"
	local input_value
	while true ; do
		read -p "Enter your $input_type: " input_value
		if [ "$input_value" ] ; then
			break
		else
			>&2 echo "Please supply your $input_type."
		fi
	done
	echo "$input_value"
}

pushd . > /dev/null
cd ~

###############################################################################
# Install bash configs.
###############################################################################

if prompt_user "Install bash configs?" ; then
	link_file "$dotfile_dir"/bash/bashrc .bashrc
	link_file "$dotfile_dir"/bash/bash_profile .bash_profile
	link_file "$dotfile_dir"/bash/bash_aliases .bash_aliases
fi

###############################################################################
# Install Haskell configs
###############################################################################

if prompt_user "Install Haskell configs?" ; then
	mkdir -p .ghc
	link_file "$dotfile_dir"/ghc/ghci.conf .ghc/ghci.conf
fi

###############################################################################
# Install git configs
###############################################################################

if prompt_user "Install git configs?" ; then
	link_file "$dotfile_dir"/git/gitconfig .gitconfig
	cp -r "$dotfile_dir"/git/git_template .git_template
	git config --global user.name "$(get_user_data name)"
	git config --global user.email "$(get_user_data email)"
fi

###############################################################################
# Install Mercurial configs
###############################################################################

if prompt_user "Install Mercurial configs?" ; then
	link_file "$dotfile_dir"/hg/hgrc .hgrc
fi

###############################################################################
# Install tmux configs
###############################################################################

if prompt_user "Install tmux configs?" ; then
	link_file "$dotfile_dir"/tmux/tmux.conf .tmux.conf
fi

###############################################################################
# Install vim configs
###############################################################################

if prompt_user "Install vim configs?" ; then
	mkdir -p .vim
	link_file "$dotfile_dir"/vim/vimrc .vimrc
	link_file "$dotfile_dir"/vim/autoload .vim/autoload
	link_file "$dotfile_dir"/vim/colors .vim/colors
	link_file "$dotfile_dir"/vim/ftdetect .vim/ftdetect
	link_file "$dotfile_dir"/vim/ftplugin .vim/ftplugin
	link_file "$dotfile_dir"/vim/bundle .vim/bundle
fi

popd > /dev/null
